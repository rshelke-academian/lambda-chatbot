name: Deploy Chatbot

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: us-east-1

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt

      - name: Create deployment package
        run: |
          cd src
          zip -r ../lambda_function.zip .
          cd ..

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.0.0"

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan
        if: github.event_name == 'pull_request'

      - name: Get S3 Bucket Name
        id: bucket
        run: |
          cd terraform
          echo "bucket_name=$(terraform output -raw s3_bucket_name)" >> $GITHUB_OUTPUT

      - name: Upload to S3
        run: |
          aws s3 cp lambda_function.zip s3://${{ steps.bucket.outputs.bucket_name }}/lambda_function.zip

      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' 